package app{	import app.Profile;	import flash.display.MovieClip;	public class BPList extends MovieClip {		private static var teamsArray:Array;		private var boxArray:Array;		private var foundArray:Array;		private static var foundArrayNum:Array;		private static var i:int;		private static var numOn:int;		private static var tempTeam:Profile;		private static var itIsFull:Boolean;		public function BPList() {			teamsArray = new Array();			boxArray = new Array();			foundArray = new Array();			foundArrayNum = new Array();			boxArray[0]=this.tb1;			boxArray[1]=this.tb2;			boxArray[2]=this.tb3;			boxArray[3]=this.tb4;			boxArray[4]=this.tb5;			boxArray[5]=this.tb6;			boxArray[6]=this.tb7;			boxArray[7]=this.tb8;			boxArray[8]=this.tb9;			boxArray[9]=this.tb10;			boxArray[10]=this.tb11;			boxArray[11]=this.tb12;			boxArray[12]=this.tb13;			boxArray[13]=this.tb14;			boxArray[14]=this.tb15;			boxArray[15]=this.tb16;			boxArray[16]=this.tb17;			boxArray[17]=this.tb18;			boxArray[18]=this.tb19;			boxArray[19]=this.tb20;			boxArray[20]=this.tb21;			foundArray[0]=this.isreg1;			foundArray[1]=this.isreg2;			foundArray[2]=this.isreg3;			foundArray[3]=this.isreg4;			foundArray[4]=this.isreg5;			foundArray[5]=this.isreg6;			foundArray[6]=this.isreg7;			foundArray[7]=this.isreg8;			foundArray[8]=this.isreg9;			foundArray[9]=this.isreg10;			foundArray[10]=this.isreg11;			foundArray[11]=this.isreg12;			foundArray[12]=this.isreg13;			foundArray[13]=this.isreg14;			foundArray[14]=this.isreg15;			foundArray[15]=this.isreg16;			foundArray[16]=this.isreg17;			foundArray[17]=this.isreg18;			foundArray[18]=this.isreg19;			foundArray[19]=this.isreg20;			foundArray[20]=this.isreg21;			foundArrayNum[0]=1;			foundArrayNum[1]=1;			foundArrayNum[2]=1;			foundArrayNum[3]=1;			foundArrayNum[4]=1;			foundArrayNum[5]=1;			foundArrayNum[6]=1;			foundArrayNum[7]=1;			foundArrayNum[8]=1;			foundArrayNum[9]=1;			foundArrayNum[10]=1;			foundArrayNum[11]=1;			foundArrayNum[12]=1;			foundArrayNum[13]=1;			foundArrayNum[14]=1;			foundArrayNum[15]=1;			foundArrayNum[16]=1;			foundArrayNum[17]=1;			foundArrayNum[18]=1;			foundArrayNum[19]=1;			foundArrayNum[20]=1;			foundArrayNum[21]=1;			itIsFull=false;			numOn=1;		}		public function enqueue(team:Profile) {			teamsArray[numOn-1]=team;			boxArray[numOn-1].text=team.getPerson();			if (team.isNotGuest()) {				foundArray[numOn-1].gotoAndStop("yes");				foundArrayNum[numOn-1]=2;			} else {				foundArray[numOn-1].gotoAndStop("no");				foundArrayNum[numOn-1]=3;			}			numOn++;			this.gotoAndStop(numOn);			populateList();			if (numOn==21) {				itIsFull=true;			}		}		public function dequeue():Profile {			tempTeam=teamsArray[0];			for (i = 0; i < numOn; i++) {				teamsArray[i]=teamsArray[i+1];				boxArray[i].text=boxArray[i+1].text;				foundArray[i].gotoAndStop(foundArrayNum[i+1]);				foundArrayNum[i]=foundArrayNum[i+1];			}			numOn--;			this.gotoAndStop(numOn);			populateList();			itIsFull=false;			return tempTeam;		}		public function getNextOpen():int {			return numOn;		}		public function isFull():Boolean {			return itIsFull;		}		public function getBox():TextField {			return boxArray[numOn];		}		public function getInput():String {			return this.ib.text;		}		public function populateList():void {			for (i = 0; i < numOn-1; i++) {				boxArray[i].text=teamsArray[i].getPerson();				foundArray[i].gotoAndStop(foundArrayNum[i]);			}			for (i = numOn-1; i < 21; i++) {				boxArray[i].text="";				foundArray[i].gotoAndStop("maybe");			}		}		public function clearCurrentInput() {			this.ib.text="";		}		public function isGTG(w:int) {			if(w == 0){				if (this.tb4.text=="") {					return false;				} else {					return true;				}			}			else {				if (this.tb2.text=="") {					return false;				} else {					return true;				}			}		}	}}